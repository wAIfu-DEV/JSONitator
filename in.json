{
    "_": {
        "user_name": {
            "hint": "Name the character should refer you as.",
            "reload": false,
            "type": "string",
            "default": "USER",
            "value": "DEV"
        },
        "character_name": {
            "hint": "Name of the character to load.",
            "reload": false,
            "type": "string",
            "default": "Hilda",
            "value": "Hilda_v2"
        },
        "context": {
            "hint": "Additional persistant context to send to the text generation model. This will have a great impact on the output.",
            "reload": false,
            "type": "string",
            "default": "",
            "value": ""
        },
        "paused": {
            "hint": "Keeps track of if the program should be paused or not.",
            "reload": false,
            "type": "boolean",
            "default": false,
            "value": false
        },
        "vts_session_token": {
            "hint": "VTS auth session token.",
            "reload": false,
            "type": "string",
            "default": "",
            "value": ""
        }
    },
    "behaviour": {
        "voice_input": {
            "hint": "Allows input via the microphone using the chosen Speech-To-Text provider.",
            "reload": true,
            "type": "boolean",
            "default": false,
            "value": true
        },
        "push_to_talk": {
            "hint": "Press Right Ctrl to record audio from the microphone, release to end recording. Requires 'Voice Input' to be on.",
            "reload": true,
            "type": "boolean",
            "default": false,
            "value": true
        },
        "read_live_chat": {
            "hint": "Makes the character respond to live chat messages.",
            "reload": true,
            "type": "boolean",
            "default": false,
            "value": true
        },
        "read_chat_after_x_seconds": {
            "hint": "Time in seconds to wait for before reading the next chat message.",
            "reload": false,
            "type": "number",
            "default": 0,
            "min": 0.05,
            "max": 999,
            "value": 0.025
        },
        "chat_reading_mode": {
            "hint": "[Latest-Buffered]: Reads the latest chat message, if none is found reads next (older) message in a buffer of 4 messages. If buffer is empty, tries to monologue.\r\n[Latest]: Reads the latest chat message, if none is found tries to monolgue.\r\n[All]: Reads every chat message without exception.",
            "reload": false,
            "type": "select",
            "options": [
                "latest-buffered",
                "latest",
                "all"
            ],
            "default": "latest-buffered",
            "value": "latest-buffered"
        },
        "always_read_highlighted": {
            "hint": "Highlighted messages will not be skipped and will be prioritized over other chat messages. (Might only work on Twitch)",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": true
        },
        "monologue": {
            "hint": "Make the character talk about subjects of interest if no new chat messages have been found.",
            "reload": false,
            "type": "boolean",
            "default": false,
            "value": false
        },
        "monologue_chance_percent": {
            "hint": "Modify the probability of triggering a monologue when no other input sources are available.",
            "reload": false,
            "type": "number",
            "default": 100,
            "min": 0,
            "max": 100,
            "value": 1
        },
        "try_prevent_freakouts": {
            "hint": "Tries to prevent freakouts by altering response in order to keep the AI on track and sane.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": true
        },
        "additional_logs": {
            "hint": "Displays debug-related logs in the console.",
            "reload": false,
            "type": "boolean",
            "default": false,
            "value": false
        },
        "log_to_file": {
            "hint": "Write console contents to a file in the logs folder.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": true
        }
    },
    "memory": {
        "max_short_term_memory_entries": {
            "hint": "Number of interactions to keep in memory. A greater number might disolve the character's personality and lead to repetition and incoherent speech.",
            "reload": false,
            "type": "number",
            "default": 5,
            "min": 1,
            "max": 20,
            "value": 10
        },
        "memory_decontamination": {
            "hint": "Adds phantom entries to the short-term memory in order to prevent the AI from showing symptoms of prompt poisoning. Not needed for OpenAI models.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": false
        },
        "decontamination_percentage": {
            "hint": "Percentage of decontamination entries to push inside the short-term memory. If \"Max Short Term Memory Entries\" is set to 10 and the percentage is set to 20 then the number of entries to add will be 2.",
            "reload": false,
            "type": "number",
            "default": 25,
            "min": 0,
            "max": 50,
            "value": 35
        },
        "contextual_memories": {
            "hint": "Memories to be remembered based on context (i.e if encounters keyword)",
            "reload": false,
            "type": "contextual_memory_list",
            "default": [],
            "value": []
        }
    },
    "moderation": {
        "filter_bad_words": {
            "hint": "Checks the content of the character's speech and incoming chat messages for bad words.",
            "reload": true,
            "type": "boolean",
            "default": true,
            "value": true
        },
        "censor_placeholder": {
            "hint": "Text spoken in place of the filtered response.",
            "reload": false,
            "type": "string",
            "default": "Filtered.",
            "value": "Filtered."
        },
        "retry_after_filtered": {
            "hint": "Generates a new response if the previous one got filtered. If disabled, speaks the censor phrase.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": true
        },
        "sfw_generation_hint": {
            "hint": "Makes NovelAI more likely to keep the story SFW. While it should reduce the likelyhood of generation NSFW content, it is not a garantee.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": false
        },
        "filter_spam_messages": {
            "hint": "Ignore spam chat messages.",
            "reload": true,
            "type": "boolean",
            "default": true,
            "value": false
        },
        "remove_non_ascii_from_chat": {
            "hint": "Removes any non-ascii characters from chat messages. Prevents chat users from using special characters to bypass the bad words filter.",
            "reload": true,
            "type": "boolean",
            "default": true,
            "value": false
        },
        "blacklisted_chatters": {
            "hint": "Lowercase usernames of chatters the character should not respond to. Usually used for bots. Or for people you don't really like.",
            "reload": false,
            "type": "list",
            "default": [
                "streamlabs",
                "streamelements",
                "nightbot"
            ],
            "value": [
                "streamlabs",
                "streamelements",
                "nightbot"
            ]
        }
    },
    "providers": {
        "livestream_platform": {
            "hint": "What platform from which to receive messages and events.",
            "reload": true,
            "type": "select",
            "options": [
                "twitch",
                "youtube"
            ],
            "default": "twitch",
            "value": "twitch"
        },
        "llm_provider": {
            "hint": "Text generation AI provider.",
            "reload": true,
            "type": "select",
            "options": [
                "novelai",
                "openai"
            ],
            "default": "novelai",
            "value": "novelai"
        },
        "tts_provider": {
            "hint": "Text-To-Speech AI provider.",
            "reload": true,
            "type": "select",
            "options": [
                "novelai",
                "azure"
            ],
            "default": "novelai",
            "value": "novelai"
        },
        "stt_provider": {
            "hint": "Speech-To-Text AI provider.",
            "reload": true,
            "type": "select",
            "options": [
                "openai",
                "google"
            ],
            "default": "google",
            "value": "google"
        }
    },
    "devices": {
        "voice_input_device": {
            "hint": "Audio device from which to receive input, usually a microphone.",
            "reload": false,
            "type": "select",
            "options": [],
            "default": "",
            "value": ""
        },
        "tts_output_device": {
            "hint": "Audio device on which to play the TTS for the character.",
            "reload": false,
            "type": "select",
            "options": [],
            "default": "",
            "value": ""
        },
        "narrator_tts_output_device": {
            "hint": "Audio device on which to play the TTS for the narrator.",
            "reload": false,
            "type": "select",
            "options": [],
            "default": "",
            "value": ""
        },
        "alt_output_device": {
            "hint": "Audio device on which to play audio unrelated to TTS. Used for the instrumental track of songs.",
            "reload": false,
            "type": "select",
            "options": [],
            "default": "",
            "value": ""
        }
    },
    "llm": {
        "temperature": {
            "hint": "",
            "reload": false,
            "type": "number",
            "default": 0.5,
            "min": 0,
            "max": 2,
            "value": 0.9
        },
        "repetition_penalty": {
            "hint": "",
            "reload": false,
            "type": "number",
            "default": 0.5,
            "min": 0,
            "max": 2,
            "value": 2.8
        },
        "length_penalty": {
            "hint": "",
            "reload": false,
            "type": "number",
            "default": 0,
            "min": -1,
            "max": 1,
            "value": 10
        },
        "max_output_length": {
            "hint": "",
            "reload": false,
            "type": "number",
            "default": 80,
            "min": 0,
            "max": 200,
            "value": 50
        },
        "novelai_model": {
            "hint": "Model used when selecting novelai as LLM provider.",
            "reload": false,
            "type": "select",
            "default": "Kayra",
            "value": "Kayra",
            "options": [
                "Kayra",
                "Clio",
                "Euterpe"
            ]
        },
        "openai_model": {
            "hint": "Model used when selecting openai as LLM provider.",
            "reload": false,
            "type": "select",
            "default": "gpt-3.5-turbo",
            "value": "gpt-3.5-turbo",
            "options": [
                "gpt-3.5-turbo",
                "gpt-4"
            ]
        }
    },
    "tts": {
        "volume_modifier_db": {
            "hint": "Modifies the volume of the TTS. Unit is dB.",
            "reload": false,
            "type": "number",
            "default": 10,
            "min": -100,
            "max": 100,
            "value": 10
        },
        "use_narrator_to_read_chat": {
            "hint": "Use another voice when reading a message coming from live chat.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": true
        },
        "narrator_voice": {
            "hint": "Voice seed of the TTS for the narrator.",
            "reload": false,
            "type": "string",
            "default": "dev",
            "value": "dev"
        },
        "read_chat_out_loud": {
            "hint": "Reads the incoming chat message out loud. Will only output character's response if disabled.",
            "reload": false,
            "type": "boolean",
            "default": true,
            "value": true
        },
        "read_every_messages_out_loud": {
            "hint": "Reads the incoming chat messages as well as user input. Overwrites 'Read Chat Out Loud'.",
            "reload": false,
            "type": "boolean",
            "default": false,
            "value": true
        }
    },
    "vts": {
        "api_port": {
            "hint": "Port of the VTS instance's plugin API.",
            "reload": true,
            "type": "number",
            "default": 8001,
            "min": 0,
            "max": 65535,
            "value": 8001
        },
        "full_reset_hotkey_sequence": {
            "hint": "Hotkey sequence to call once connecting to VTS. Usually used to reset the animations and toggles.",
            "reload": false,
            "type": "list",
            "default": [],
            "value": [
                "RESET_1",
                "RESET_0"
            ]
        },
        "singing_hotkey_sequence": {
            "hint": "Hotkey sequence to call once connecting to VTS. Usually used to reset the animations and toggles.",
            "reload": false,
            "type": "list",
            "default": [],
            "value": [
                "Singing"
            ]
        },
        "emotions": {
            "hint": "Hotkey sequences to play for each emotions. Emotions are infered using the LLM for each answers. Make sure the name of the emotion is related to a feeling the character will express in its response.",
            "reload": false,
            "type": "vts_emotions_list",
            "default": [],
            "value": [
                {
                    "emotion_name": "None",
                    "talking_hotkey_sequence": [
                        "Talking"
                    ],
                    "idle_hotkey_sequence": [
                        "RESET_1"
                    ],
                    "reset_hotkey_sequence": [
                        "RESET_1"
                    ]
                },
                {
                    "emotion_name": "Angry",
                    "talking_hotkey_sequence": [
                        "Angry_anim",
                        "Angry"
                    ],
                    "idle_hotkey_sequence": [],
                    "reset_hotkey_sequence": [
                        "RESET_1",
                        "Angry"
                    ]
                },
                {
                    "emotion_name": "Sad",
                    "talking_hotkey_sequence": [
                        "Sad_anim",
                        "Sad"
                    ],
                    "idle_hotkey_sequence": [],
                    "reset_hotkey_sequence": [
                        "RESET_1",
                        "Sad"
                    ]
                },
                {
                    "emotion_name": "Happy",
                    "talking_hotkey_sequence": [
                        "Talking"
                    ],
                    "idle_hotkey_sequence": [
                        "RESET_1"
                    ],
                    "reset_hotkey_sequence": [
                        "RESET_1"
                    ]
                },
                {
                    "emotion_name": "Blushing",
                    "talking_hotkey_sequence": [
                        "Talking",
                        "Blushing"
                    ],
                    "idle_hotkey_sequence": [
                        "RESET_1"
                    ],
                    "reset_hotkey_sequence": [
                        "RESET_1",
                        "Blushing"
                    ]
                }
            ]
        },
        "keyword_triggers": {
            "hint": "",
            "reload": false,
            "type": "vts_emotions_list",
            "default": [],
            "value": []
        },
        "keyword_based_animations": {
            "hint": "",
            "reload": false,
            "type": "vts_keywords_list",
            "default": [],
            "value": [
                {
                    "keywords": [
                        "wink"
                    ],
                    "hotkey_sequence": [
                        "Winking"
                    ]
                }
            ]
        }
    },
    "azure": {
        "pitch_percentage": {
            "hint": "Modifier added to the pitch of the Azure TTS voice.",
            "reload": false,
            "type": "number",
            "default": 0,
            "value": 0,
            "max": 100,
            "min": 0
        }
    },
    "stt": {
        "stt_language": {
            "hint": "Language the STT model should use to infer the spoken text.",
            "reload": false,
            "type": "select",
            "default": "en-US",
            "value": "en-US",
            "options": [
                "af",
                "eu",
                "bg",
                "ca",
                "ar-EG",
                "ar-JO",
                "ar-KW",
                "ar-LB",
                "ar-QA",
                "ar-AE",
                "ar-MA",
                "ar-IQ",
                "ar-DZ",
                "ar-BH",
                "ar-LYZA",
                "ar-OM",
                "ar-SA",
                "ar-TN",
                "ar-YE",
                "cs",
                "nl-NL",
                "en-AU",
                "en-CA",
                "en-IN",
                "en-NZ",
                "en-ZA",
                "en-GB",
                "en-US",
                "fi",
                "fr-FR",
                "gl",
                "de-DE",
                "he",
                "hu",
                "is",
                "it-IT",
                "id",
                "ja",
                "ko",
                "la",
                "zh-CN",
                "zh-TW",
                "?",
                "zh-HK",
                "zh-yue",
                "ms-MY",
                "no-NO",
                "pl",
                "xx-piglatin",
                "pt-PT",
                "pt-BR",
                "ro-RO",
                "ru",
                "sr-SP",
                "sk",
                "es-AR",
                "es-BO",
                "es-CL",
                "es-CO",
                "es-CR",
                "es-DO",
                "es-EC",
                "es-SV",
                "es-GT",
                "es-HN",
                "es-MX",
                "es-NI",
                "es-PA",
                "es-PY",
                "es-PE",
                "es-PR",
                "es-ES",
                "es-US",
                "es-UY",
                "es-VE",
                "sv-SE",
                "tr",
                "zu"
            ]
        }
    },
    "singing": {
        "timeout_minutes_between_playlist_songs": {
            "hint": "Timeout in minutes in between songs when playing a playlist with !playlist",
            "reload": false,
            "type": "number",
            "default": 0,
            "value": 5,
            "max": 999,
            "min": 0
        },
        "song_playlist": {
            "hint": "Name of the songs to play in order whith the command !playlist",
            "reload": false,
            "type": "list",
            "default": [],
            "value": []
        }
    }
}